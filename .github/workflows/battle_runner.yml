name: Run Warhammer Battle

on:
  push:
    branches: [ '**' ]
    paths:
      - 'battlefields/*.yml'

jobs:
  setup-battle:
    if: github.ref_name != 'master'
    runs-on: ubuntu-latest
    outputs:
      battlefield_file: ${{ steps.set_vars.outputs.battlefield_file }}
      rules_file: ${{ steps.set_vars.outputs.rules_file }}
      current_player: ${{ steps.set_vars.outputs.current_player }}
      current_phase: ${{ steps.set_vars.outputs.current_phase }}
      turn_number: ${{ steps.set_vars.outputs.turn_number }}
      all_phases: ${{ steps.get_phases.outputs.all_phases }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get battlefield and rules file paths
        id: set_vars
        run: |
          BATTLEFIELD_FILE=$(find battlefields -maxdepth 1 -name "*.yml" | head -n 1)
          echo "battlefield_file=$BATTLEFIELD_FILE" >> $GITHUB_OUTPUT
          echo "rules_file=rules/whfb6.yml" >> $GITHUB_OUTPUT

          CURRENT_PLAYER=$(ruby -ryaml -e "puts YAML.load_file('$BATTLEFIELD_FILE')['current_turn']['player']")
          echo "current_player=$CURRENT_PLAYER" >> $GITHUB_OUTPUT

          CURRENT_PHASE=$(ruby -ryaml -e "data = YAML.load_file('$BATTLEFIELD_FILE'); puts data['current_turn'] && data['current_turn']['phase'] ? data['current_turn']['phase'] : ''")
          echo "current_phase=$CURRENT_PHASE" >> $GITHUB_OUTPUT

          TURN_NUMBER=$(ruby -ryaml -e "puts YAML.load_file('$BATTLEFIELD_FILE')['current_turn']['turn_number']")
          echo "turn_number=$TURN_NUMBER" >> $GITHUB_OUTPUT

      - name: Get all phases from rules file
        id: get_phases
        run: |
          ALL_PHASES=$(ruby -ryaml -rjson -e "puts YAML.load_file('${{ steps.set_vars.outputs.rules_file }}')['phases'].map { |phase| phase['name'] }.to_json")
          echo "ALL_PHASES: $ALL_PHASES"
          echo "all_phases=$(echo "$ALL_PHASES" | tr -d '\n')" >> $GITHUB_OUTPUT

      - name: Upload battlefield artifact
        uses: actions/upload-artifact@v4
        with:
          name: battlefield-initial
          path: ${{ steps.set_vars.outputs.battlefield_file }}

  movement-phase:
    runs-on: ubuntu-latest
    needs: setup-battle
    if: needs.setup-battle.outputs.current_phase == 'Movement Phase'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Calculate artifact names
        id: calculate_artifact_names
        uses: ./.github/actions/calculate-artifact-names
        with:
          all-phases-json: ${{ needs.setup-battle.outputs.all_phases }}
          current-phase: ${{ needs.setup-battle.outputs.current_phase }}

      - name: Download battlefield artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.calculate_artifact_names.outputs.download-artifact-name }}
          path: ./

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'

      - name: Run Movement Phase
        run: ruby phases/movement_phase.rb ${{ needs.setup-battle.outputs.battlefield_file }}

      - name: Debug upload_artifact_name
        run: echo "${{ steps.calculate_artifact_names.outputs.upload-artifact-name }}"

      - name: Upload battlefield artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.calculate_artifact_names.outputs.upload-artifact-name }}
          path: ${{ needs.setup-battle.outputs.battlefield_file }}

  magic-phase:
    runs-on: ubuntu-latest
    needs: movement-phase
    if: needs.setup-battle.outputs.current_phase == 'Magic Phase'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Calculate artifact names
        id: calculate_artifact_names
        uses: ./.github/actions/calculate-artifact-names
        with:
          all-phases-json: ${{ needs.setup-battle.outputs.all_phases }}
          current-phase: ${{ needs.setup-battle.outputs.current_phase }}

      - name: Download battlefield artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.calculate_artifact_names.outputs.download-artifact-name }}
          path: ./

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'

      - name: Run Magic Phase
        run: ruby phases/magic_phase.rb ${{ needs.setup-battle.outputs.battlefield_file }}

      - name: Upload battlefield artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.calculate_artifact_names.outputs.upload-artifact-name }}
          path: ${{ needs.setup-battle.outputs.battlefield_file }}

  shooting-phase:
    runs-on: ubuntu-latest
    needs: magic-phase
    if: needs.setup-battle.outputs.current_phase == 'Shooting Phase'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Calculate artifact names
        id: calculate_artifact_names
        uses: ./.github/actions/calculate-artifact-names
        with:
          all-phases-json: ${{ needs.setup-battle.outputs.all_phases }}
          current-phase: ${{ needs.setup-battle.outputs.current_phase }}

      - name: Download battlefield artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.calculate_artifact_names.outputs.download-artifact-name }}
          path: ./

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'

      - name: Run Shooting Phase
        run: ruby phases/shooting_phase.rb ${{ needs.setup-battle.outputs.battlefield_file }}

      - name: Upload battlefield artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.calculate_artifact_names.outputs.upload-artifact-name }}
          path: ${{ needs.setup-battle.outputs.battlefield_file }}

  combat-phase:
    runs-on: ubuntu-latest
    needs: shooting-phase
    if: needs.setup-battle.outputs.current_phase == 'Combat Phase'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Calculate artifact names
        id: calculate_artifact_names
        uses: ./.github/actions/calculate-artifact-names
        with:
          all-phases-json: ${{ needs.setup-battle.outputs.all_phases }}
          current-phase: ${{ needs.setup-battle.outputs.current_phase }}

      - name: Download battlefield artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.calculate_artifact_names.outputs.download-artifact-name }}
          path: ./

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'

      - name: Run Combat Phase
        run: ruby phases/combat_phase.rb ${{ needs.setup-battle.outputs.battlefield_file }}

      - name: Upload battlefield artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.calculate_artifact_names.outputs.upload-artifact-name }}
          path: ${{ needs.setup-battle.outputs.battlefield_file }}

  morale-phase:
    runs-on: ubuntu-latest
    needs: combat-phase
    if: needs.setup-battle.outputs.current_phase == 'Morale Phase'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Calculate artifact names
        id: calculate_artifact_names
        uses: ./.github/actions/calculate-artifact-names
        with:
          all-phases-json: ${{ needs.setup-battle.outputs.all_phases }}
          current-phase: ${{ needs.setup-battle.outputs.current_phase }}

      - name: Download battlefield artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.calculate_artifact_names.outputs.download-artifact-name }}
          path: ./

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'

      - name: Run Morale Phase
        run: ruby phases/morale_phase.rb ${{ needs.setup-battle.outputs.battlefield_file }}

      - name: Upload battlefield artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.calculate_artifact_names.outputs.upload-artifact-name }}
          path: ${{ needs.setup-battle.outputs.battlefield_file }}

  end-turn:
    runs-on: ubuntu-latest
    needs: morale-phase
    if: needs.setup-battle.outputs.current_phase == 'Morale Phase'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Calculate artifact names
        id: calculate_artifact_names
        uses: ./.github/actions/calculate-artifact-names
        with:
          all-phases-json: ${{ needs.setup-battle.outputs.all_phases }}
          current-phase: ${{ needs.setup-battle.outputs.current_phase }}

      - name: Download battlefield artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.calculate_artifact_names.outputs.download-artifact-name }}
          path: ./

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'

      - name: Install dependencies (Psych)
        run: gem install Psych

      - name: Update turn data and save battlefield
        run: ruby main.rb ${{ needs.setup-battle.outputs.battlefield_file }} ${{ needs.setup-battle.outputs.rules_file }}

      - name: Commit changes to battlefield file
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add ${{ needs.setup-battle.outputs.battlefield_file }}
          git commit -m "Automated Battle Turn: Turn ${{ needs.setup-battle.outputs.current_turn }} - ${{ needs.setup-battle.outputs.current_player }}" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
