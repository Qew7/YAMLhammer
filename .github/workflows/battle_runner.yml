name: Run Warhammer Battle

on:
  push:
    branches: [ '**' ]
    paths:
      - 'battlefields/*.yml'

jobs:
  setup-battle:
    if: github.ref_name != 'master'
    runs-on: ubuntu-latest
    outputs:
      battlefield_file: ${{ steps.set_vars.outputs.battlefield_file }}
      rules_file: ${{ steps.set_vars.outputs.rules_file }}
      current_player: ${{ steps.set_vars.outputs.current_player }}
      current_phase: ${{ steps.set_vars.outputs.current_phase }}
      turn_number: ${{ steps.set_vars.outputs.turn_number }}
      all_phases: ${{ steps.get_phases.outputs.all_phases }}
      initial_phase_name: ${{ steps.set_vars.outputs.current_phase }} # Output the initial phase from battlefield.yml
      battlefield_dir: ${{ steps.set_vars.outputs.battlefield_dir }}
      initial_battlefield_artifact_name: initial-battlefield-state
      temp_battlefield_file: ${{ steps.set_vars.outputs.temp_battlefield_file }} # New output for temp file

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get battlefield and rules file paths
        id: set_vars
        run: |
          BATTLEFIELD_FILE=$(find battlefields -maxdepth 1 -name "*.yml" | head -n 1)
          echo "battlefield_file=$BATTLEFIELD_FILE" >> $GITHUB_OUTPUT
          echo "rules_file=rules/whfb6.yml" >> $GITHUB_OUTPUT

          BATTLEFIELD_DIR=$(dirname "$BATTLEFIELD_FILE")
          echo "battlefield_dir=$BATTLEFIELD_DIR" >> $GITHUB_OUTPUT

          # Create temporary battlefield file path
          TEMP_BATTLEFIELD_FILE="${BATTLEFIELD_FILE%.yml}_tmp.yml"
          echo "temp_battlefield_file=$TEMP_BATTLEFIELD_FILE" >> $GITHUB_OUTPUT

          # Copy original battlefield content to temporary file for initial processing
          cp "$BATTLEFIELD_FILE" "$TEMP_BATTLEFIELD_FILE"

          CURRENT_PLAYER=$(ruby -ryaml -e "puts YAML.load_file('"$TEMP_BATTLEFIELD_FILE"')['current_turn']['player']")
          echo "current_player=$CURRENT_PLAYER" >> $GITHUB_OUTPUT

          CURRENT_PHASE=$(ruby -ryaml -e "data = YAML.load_file('$TEMP_BATTLEFIELD_FILE'); puts data['current_turn'] && data['current_turn']['phase'] ? data['current_turn']['phase'] : ''")
          echo "current_phase=$CURRENT_PHASE" >> $GITHUB_OUTPUT

          TURN_NUMBER=$(ruby -ryaml -e "puts YAML.load_file('$TEMP_BATTLEFIELD_FILE')['current_turn']['turn_number']")
          echo "turn_number=$TURN_NUMBER" >> $GITHUB_OUTPUT

      - name: Get all phases from rules file
        id: get_phases
        run: |
          ALL_PHASES=$(ruby -ryaml -rjson -e "puts YAML.load_file('${{ steps.set_vars.outputs.rules_file }}')['phases'].map { |phase| phase['name'] }.to_json")
          echo "ALL_PHASES: $ALL_PHASES"
          echo "all_phases=$(echo "$ALL_PHASES" | tr -d '\n')" >> $GITHUB_OUTPUT

      - name: Upload initial temporary battlefield artifact
        uses: actions/upload-artifact@v4
        with:
          name: initial-battlefield-state # Use a consistent name for the artifact
          path: ${{ steps.set_vars.outputs.temp_battlefield_file }} # Upload the specific temporary file
          retention-days: 1 # Keep artifacts for a short period

  movement-phase:
    uses: ./.github/workflows/reusable_phases/movement_phase.yml
    needs: setup-battle
    with:
      battlefield_artifact_name: ${{ needs.setup-battle.outputs.initial_battlefield_artifact_name }}
      temp_battlefield_file: ${{ needs.setup-battle.outputs.temp_battlefield_file }}
      battlefield_dir: ${{ needs.setup-battle.outputs.battlefield_dir }}
    secrets: inherit
    if: needs.setup-battle.outputs.initial_phase_name == 'Movement Phase'
    outputs:
      next_phase_output: ${{ jobs.movement_phase_job.outputs.next_phase_output }}
      next_battlefield_artifact_name: ${{ jobs.movement_phase_job.outputs.next_battlefield_artifact_name }}

  magic-phase:
    uses: ./.github/workflows/reusable_phases/magic_phase.yml
    needs: movement-phase
    with:
      battlefield_artifact_name: ${{ needs.movement-phase.outputs.next_battlefield_artifact_name }}
      temp_battlefield_file: ${{ needs.setup-battle.outputs.temp_battlefield_file }}
      battlefield_dir: ${{ needs.setup-battle.outputs.battlefield_dir }}
      previous_phase_output_name: ${{ needs.movement-phase.outputs.next_phase_output }}
    secrets: inherit
    if: needs.movement-phase.outputs.next_phase_output == 'Magic Phase'
    outputs:
      next_phase_output: ${{ jobs.magic_phase_job.outputs.next_phase_output }}
      next_battlefield_artifact_name: ${{ jobs.magic_phase_job.outputs.next_battlefield_artifact_name }}

  shooting-phase:
    uses: ./.github/workflows/reusable_phases/shooting_phase.yml
    needs: magic-phase
    with:
      battlefield_artifact_name: ${{ needs.magic-phase.outputs.next_battlefield_artifact_name }}
      temp_battlefield_file: ${{ needs.setup-battle.outputs.temp_battlefield_file }}
      battlefield_dir: ${{ needs.setup-battle.outputs.battlefield_dir }}
      previous_phase_output_name: ${{ needs.magic-phase.outputs.next_phase_output }}
    secrets: inherit
    if: needs.magic-phase.outputs.next_phase_output == 'Shooting Phase'
    outputs:
      next_phase_output: ${{ jobs.shooting_phase_job.outputs.next_phase_output }}
      next_battlefield_artifact_name: ${{ jobs.shooting_phase_job.outputs.next_battlefield_artifact_name }}

  combat-phase:
    uses: ./.github/workflows/reusable_phases/combat_phase.yml
    needs: shooting-phase
    with:
      battlefield_artifact_name: ${{ needs.shooting-phase.outputs.next_battlefield_artifact_name }}
      temp_battlefield_file: ${{ needs.setup-battle.outputs.temp_battlefield_file }}
      battlefield_dir: ${{ needs.setup-battle.outputs.battlefield_dir }}
      previous_phase_output_name: ${{ needs.shooting-phase.outputs.next_phase_output }}
    secrets: inherit
    if: needs.shooting-phase.outputs.next_phase_output == 'Combat Phase'
    outputs:
      next_phase_output: ${{ jobs.combat_phase_job.outputs.next_phase_output }}
      next_battlefield_artifact_name: ${{ jobs.combat_phase_job.outputs.next_battlefield_artifact_name }}

  morale-phase:
    uses: ./.github/workflows/reusable_phases/morale_phase.yml
    needs: combat-phase
    with:
      battlefield_artifact_name: ${{ needs.combat-phase.outputs.next_battlefield_artifact_name }}
      temp_battlefield_file: ${{ needs.setup-battle.outputs.temp_battlefield_file }}
      battlefield_dir: ${{ needs.setup-battle.outputs.battlefield_dir }}
      previous_phase_output_name: ${{ needs.combat-phase.outputs.next_phase_output }}
    secrets: inherit
    if: needs.combat-phase.outputs.next_phase_output == 'Morale Phase'
    outputs:
      next_phase_output: ${{ jobs.morale_phase_job.outputs.next_phase_output }}
      next_battlefield_artifact_name: ${{ jobs.morale_phase_job.outputs.next_battlefield_artifact_name }}

  finish-turn-and-commit:
    runs-on: ubuntu-latest
    needs:
      - setup-battle
      - movement-phase
      - magic-phase
      - shooting-phase
      - combat-phase
      - morale-phase
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download final battlefield artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.morale-phase.outputs.next_battlefield_artifact_name }}
          path: ${{ needs.setup-battle.outputs.battlefield_dir }} # Изменено: используем динамическую директорию

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'

      - name: Install dependencies (Psych)
        run: gem install Psych

      - name: Update turn data and save battlefield
        run: ruby main.rb ${{ needs.setup-battle.outputs.temp_battlefield_file }} ${{ needs.setup-battle.outputs.rules_file }}

      - name: Commit changes to battlefield file
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          BATTLEFIELD_FILE="${{ needs.setup-battle.outputs.battlefield_file }}"
          TEMP_BATTLEFIELD_FILE="${{ needs.setup-battle.outputs.temp_battlefield_file }}"
          ACTUAL_TEMP_BATTLEFIELD_FILE="$TEMP_BATTLEFIELD_FILE" # Simplified path as artifact now keeps directory structure
          cp "$ACTUAL_TEMP_BATTLEFIELD_FILE" "$BATTLEFIELD_FILE" # Copy temp back to original
          CURRENT_PLAYER=$(ruby -ryaml -e "puts YAML.load_file('$BATTLEFIELD_FILE')['current_turn']['player']")
          TURN_NUMBER=$(ruby -ryaml -e "puts YAML.load_file('$BATTLEFIELD_FILE')['current_turn']['turn_number']")
          git add ${{ needs.setup-battle.outputs.battlefield_file }}
          git commit -m "Automated Battle Turn: Turn ${TURN_NUMBER} - ${CURRENT_PLAYER}" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
