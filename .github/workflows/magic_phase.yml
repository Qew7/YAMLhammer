on:
  workflow_call:
    inputs:
      battlefield_artifact_name:
        required: true
        type: string
      temp_battlefield_file:
        required: true
        type: string
      battlefield_dir:
        required: true
        type: string
      current_phase_name:
        required: true
        type: string
      all_phases_list:
        required: true
        type: string
      skip_execution:
        required: false
        type: boolean
        default: false
    outputs:
      next_phase_output:
        value: ${{ jobs.magic_phase_job.outputs.next_phase_output }}
      next_battlefield_artifact_name:
        value: ${{ jobs.magic_phase_job.outputs.next_battlefield_artifact_name }}
      temp_battlefield_file:
        value: ${{ jobs.magic_phase_job.outputs.temp_battlefield_file }}
      battlefield_dir:
        value: ${{ jobs.magic_phase_job.outputs.battlefield_dir }}

jobs:
  magic_phase_job:
    runs-on: ubuntu-latest
    outputs:
      next_phase_output: ${{ steps.determine_next_phase.outputs.next_phase_output }}
      next_battlefield_artifact_name: magic-phase-battlefield-state
      temp_battlefield_file: ${{ inputs.temp_battlefield_file }}
      battlefield_dir: ${{ inputs.battlefield_dir }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download battlefield artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.battlefield_artifact_name }}
          path: ${{ inputs.battlefield_dir }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.5'

      - name: Execute Magic Phase
        if: ${{ ! inputs.skip_execution }}
        run: ruby phases/magic_phase.rb ${{ inputs.temp_battlefield_file }}

      - name: Determine next phase
        id: determine_next_phase
        run: |
          ALL_PHASES_JSON='${{ inputs.all_phases_list }}'
          CURRENT_PHASE_NAME='${{ inputs.current_phase_name }}'

          # Use jq to find the index of the current phase and get the next phase name
          CURRENT_INDEX=$(echo "$ALL_PHASES_JSON" | jq -r --arg current "$CURRENT_PHASE_NAME" 'map(.) | index($current) // -1')

          NEXT_PHASE=""
          # Check if the current phase was found and if there's a next phase
          if [ "$CURRENT_INDEX" -ne "-1" ] && [ "$((CURRENT_INDEX + 1))" -lt "$(echo "$ALL_PHASES_JSON" | jq 'length')" ]; then
            NEXT_PHASE_INDEX=$((CURRENT_INDEX + 1))
            NEXT_PHASE=$(echo "$ALL_PHASES_JSON" | jq -r ".[${NEXT_PHASE_INDEX}]")
          fi

          echo "next_phase_output=$NEXT_PHASE" >> $GITHUB_OUTPUT

      - name: Upload battlefield artifact
        uses: actions/upload-artifact@v4
        with:
          name: magic-phase-battlefield-state
          path: ${{ inputs.temp_battlefield_file }}
          retention-days: 1
