name: Calculate Artifact Names
description: 'Calculates download and upload artifact names based on current phase and all available phases.'

inputs:
  all-phases-json:
    description: 'JSON string of all phases in order.'
    required: true
  current-phase:
    description: 'The name of the current phase.'
    required: true

outputs:
  download-artifact-name:
    description: 'The name of the artifact to download.'
    value: ${{ steps.calculate.outputs.download_artifact_name }}
  upload-artifact-name:
    description: 'The name of the artifact to upload.'
    value: ${{ steps.calculate.outputs.upload_artifact_name }}

runs:
  using: "composite"
  steps:
    - id: calculate
      run: |
        ALL_PHASES_JSON='${{ inputs.all-phases-json }}'
        CURRENT_PHASE='${{ inputs.current-phase }}'

        ruby -rjson -e "
          puts \"DEBUG: ALL_PHASES_JSON: #{ENV['ALL_PHASES_JSON']}\"
          puts \"DEBUG: CURRENT_PHASE: #{ENV['CURRENT_PHASE']}\"

          all_phases = JSON.parse(ENV['ALL_PHASES_JSON'])
          current_phase = ENV['CURRENT_PHASE'] ? ENV['CURRENT_PHASE'].strip : ''

          current_phase_index = all_phases.find_index(current_phase)

          puts \"DEBUG: current_phase_index: #{current_phase_index}\"

          if current_phase_index == 0
            download_artifact_name = 'battlefield-initial'
          elsif !current_phase_index.nil?
            previous_phase_name = all_phases[current_phase_index - 1]
            download_artifact_name = \"battlefield-after-#{(previous_phase_name || '').downcase.gsub(' ', '-')}\"
          else
            # Fallback if current_phase not found, though workflow if condition should prevent this
            download_artifact_name = 'battlefield-unknown'
          end

          upload_artifact_name = \"battlefield-after-#{(current_phase || '').downcase.gsub(' ', '-')}\"

          puts \"download_artifact_name=#{download_artifact_name}\"
          puts \"upload_artifact_name=#{upload_artifact_name}\"
        " >> $GITHUB_OUTPUT
      shell: bash
