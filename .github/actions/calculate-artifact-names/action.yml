name: Calculate Artifact Names
description: 'Calculates download and upload artifact names based on current phase and all available phases.'

inputs:
  all-phases-json:
    description: 'JSON string of all phases in order.'
    required: true
  current-phase:
    description: 'The name of the current phase.'
    required: true

outputs:
  download-artifact-name:
    description: 'The name of the artifact to download.'
    value: ${{ steps.calculate.outputs.download_artifact_name }}
  upload-artifact-name:
    description: 'The name of the artifact to upload.'
    value: ${{ steps.calculate.outputs.upload_artifact_name }}

runs:
  using: "composite"
  steps:
    - id: calculate
      run: |
        export ALL_PHASES_JSON='${{ inputs.all-phases-json }}'
        export CURRENT_PHASE='${{ inputs.current-phase }}'
        echo "DEBUG: ENV ALL_PHASES_JSON: $ALL_PHASES_JSON"
        echo "DEBUG: ENV CURRENT_PHASE: $CURRENT_PHASE"
        ruby -rjson -e "
          all_phases = JSON.parse(ENV['ALL_PHASES_JSON'])
          current_phase = ENV['CURRENT_PHASE'] ? ENV['CURRENT_PHASE'].strip : ''

          # If current_phase is empty, default to the first phase in all_phases
          if current_phase.empty? && !all_phases.empty?
            current_phase = all_phases.first
          end

          STDERR.puts \"DEBUG: Ruby current_phase: #{current_phase.inspect}\"

          STDERR.puts \"DEBUG: Ruby all_phases: #{all_phases.inspect}\"
  
          current_phase_index = all_phases.find_index(current_phase)

          if current_phase_index == 0
            download_artifact_name = 'battlefield-initial'
          elsif !current_phase_index.nil?
            previous_phase_name = all_phases[current_phase_index - 1]
            download_artifact_name = \"battlefield-after-#{(previous_phase_name || '').downcase.gsub(' ', '-')}\"
          else
            download_artifact_name = 'battlefield-unknown'
          end

          upload_artifact_name = \"battlefield-after-#{(current_phase || '').downcase.gsub(' ', '-')}\"

          STDERR.puts \"DEBUG: Ruby final download_artifact_name: #{download_artifact_name.inspect}\"
          STDERR.puts \"DEBUG: Ruby final upload_artifact_name: #{upload_artifact_name.inspect}\"

          puts \"download_artifact_name=#{download_artifact_name}\"
          puts \"upload_artifact_name=#{upload_artifact_name}\"
        " >> $GITHUB_OUTPUT
        cat $GITHUB_OUTPUT
      shell: bash
